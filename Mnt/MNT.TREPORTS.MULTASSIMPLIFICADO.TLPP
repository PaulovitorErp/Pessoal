#include "msobject.ch"
#include "totvs.framework.treports.integratedprovider.th"

namespace totvs.protheus.MultasSimplificadoSmartViewBusinessObject

//-------------------------------------------------------------------
/*/{Protheus.doc} MultasSimplificadoSmartViewBusinessObject
Objeto de Negócio de Multas Simplificado
Tabelas: TRX, TSH.
@type Classe
 
@author João Ricardo Santini Zandoná
@since 15/08/2023
@version P11
@return Nil
/*/
//-------------------------------------------------------------------
@totvsFrameworkTReportsIntegratedProvider(active=.T., team="SIGAGFR", tables="TRX, TSH", name="MultasSimplificadoSmartViewBusinessObject", country="ALL", initialRelease="12.1.2310")
class MultasSimplificadoSmartViewBusinessObject from totvs.framework.treports.integratedprovider.IntegratedProvider
    public method new() as object
    public method getAreas() as array
    public method getDescription() as character
    public method getData() as object
    public method getSchema() as object
    public method nomeMes() as character
endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} New
Método Construtor do Objeto de Negócio
@type Método
 
@author João Ricardo Santini Zandoná
@since 15/08/2023
@version P11
@return objeto, Retorna o próprio objeto
/*/
//-------------------------------------------------------------------
method new() as object class MultasSimplificadoSmartViewBusinessObject
    _Super:new()
    self:setDisplayName("Multas Simplificado")
    self:SetPergunte("MNT390")
return self

//-------------------------------------------------------------------
/*/{Protheus.doc} getDescription
Descrição do Objeto de Negócio
@type Método
 
@author João Ricardo Santini Zandoná
@since 15/08/2023
@version P11
@return caractere, Conteúdo da descrição do Objeto de Negócios
/*/
//-------------------------------------------------------------------
method getDescription() as character class MultasSimplificadoSmartViewBusinessObject
return "Tabelas: TRX"

//-------------------------------------------------------------------
/*/{Protheus.doc} getAreas
Áreas do menu que o Objeto de Negócio deve ficar
@type Método
 
@author João Ricardo Santini Zandoná
@since 15/08/2023
@version P11
@return array, Retorna um array contendo as sessões do Menu em que o Objeto de Negócio deve aparecer
/*/
//-------------------------------------------------------------------
method getAreas() as array class MultasSimplificadoSmartViewBusinessObject
return {"Multa", "Multas"}

//-------------------------------------------------------------------
/*/{Protheus.doc} GetData
Método responsável pela montagem da Query usada para obter a massa
de dados
@type Método

@author João Ricardo Santini Zandoná
@since 15/08/2023
@version P11

@param nPage, numerico, Número da página atual
@param oFilter, objeto, Filtros aplicados pelo usuário

@return objeto, Retorna o próprio objeto
/*/
//-------------------------------------------------------------------
method getData(nPage as numeric, oFilter as object) as object class MultasSimplificadoSmartViewBusinessObject
    Local cQuery as character
    Local cNomeMes as character
    Local nX := 1
    Local nAno := 0

    jParams := oFilter:getParameters() // metodo para retorno do json dos parâmetros

    nAno := jParams['MV_PAR01', 1]

    cQuery := "SELECT MULTAS.* FROM ("
    cQuery += "SELECT JANEIRO.*, FEVEREIRO.*, MARCO.*, ABRIL.*, MAIO.*, JUNHO.*, JULHO.*, AGOSTO.*, "
    cQuery += "SETEMBRO.*, OUTUBRO.*, NOVEMBRO.*, DEZEMBRO.*, "
    cQuery += "'"+ cValToChar(nAno)+"' AS ANO FROM "

    While nAno <= jParams['MV_PAR02', 1]
        While nX <= 12
        
            cNomeMes := self:nomeMes(nX)
            cQuery += "(SELECT COALESCE(COUNT(TRX.TRX_MULTA), 0) AS "
            cQuery += cNomeMes+"MULTAS, "
            cQuery += "COALESCE(SUM(TRX.TRX_VALPAG), 0) AS "
            cQuery += cNomeMes+"VALOR "
            cQuery += "FROM " + RetSQLName("TRX") +  " TRX "

            If jParams['MV_PAR03', 1] == 2
                cQuery += "INNER JOIN " + RetSQLName("TSH") + " TSH ON "
                cQuery += NGMODCOMP("TSH","TRX","=") + " "
                cQuery += "AND TSH.TSH_CODINF = TRX.TRX_CODINF "
                cQuery += "AND TSH_FLGTPM = '1' "
                cQuery += "AND TSH.D_E_L_E_T_ = ''"
            ElseIf jParams['MV_PAR03', 1] == 3
                cQuery += "INNER JOIN " + RetSQLName("TSH") + " TSH ON "
                cQuery += NGMODCOMP("TSH","TRX","=") + " "
                cQuery += "AND TSH.TSH_CODINF = TRX.TRX_CODINF "
                cQuery += "AND TSH_FLGTPM = '2' "
                cQuery += "AND TSH.D_E_L_E_T_ = ''"
            EndIf

            cQuery += "WHERE (TRX.TRX_DTINFR >= '" + AllTrim(Str(nAno))+PADL(cValToChar(nX), 2, '0')+"01' "
            cQuery += "AND TRX.TRX_DTINFR  <= '" + AllTrim(Str(nAno))+PADL(cValToChar(nX), 2, '0')+"31') "
            cQuery += "AND TRX.D_E_L_E_T_ = '') "+cNomeMes
            If nX != 12
                cQuery += ', '
            EndIf

            nX := nX + 1

        Enddo
        nAno := nAno + 1
        nX := 1
        If nAno <= jParams['MV_PAR02', 1]
            cQuery += ' UNION '
            cQuery += "SELECT JANEIRO.*, FEVEREIRO.*, MARCO.*, ABRIL.*, MAIO.*, JUNHO.*, JULHO.*, AGOSTO.*, "
            cQuery += "SETEMBRO.*, OUTUBRO.*, NOVEMBRO.*, DEZEMBRO.*, "
            cQuery += "'"+ cValToChar(nAno)+"' AS ANO FROM "
        EndIf
    Enddo

    cQuery += ') MULTAS'

    self:setQuery(cQuery)
    
return self:oData

//-------------------------------------------------------------------
/*/{Protheus.doc} nomeMes
Método responsável por informar qual o nome do mês
@type Método

@author João Ricardo Santini Zandoná
@since 15/08/2023
@version P11

@param nMes, numerico, Número do Mês que se deseja obter o nome

@return caractere, Retorna o nome do mês conforme o valor recebido no
parâmetro
/*/
//-------------------------------------------------------------------
method nomeMes(nMes) class MultasSimplificadoSmartViewBusinessObject
    Local nNomeMes as character

    DO CASE
        CASE nMes == 1
            nNomeMes := 'JANEIRO'
        CASE nMes == 2
            nNomeMes := 'FEVEREIRO'
        CASE nMes == 3
            nNomeMes := 'MARCO'
        CASE nMes == 4
            nNomeMes := 'ABRIL'
        CASE nMes == 5
            nNomeMes := 'MAIO'
        CASE nMes == 6
            nNomeMes := 'JUNHO'
        CASE nMes == 7
            nNomeMes := 'JULHO'
        CASE nMes == 8
            nNomeMes := 'AGOSTO'
        CASE nMes == 9
            nNomeMes := 'SETEMBRO'
        CASE nMes == 10
            nNomeMes := 'OUTUBRO'
        CASE nMes == 11
            nNomeMes := 'NOVEMBRO'
        CASE nMes == 12
            nNomeMes := 'DEZEMBRO'
    ENDCASE

return nNomeMes

//-------------------------------------------------------------------
/*/{Protheus.doc} getSchema
Método responsável por informar as características dos campos
@type Método

@author João Ricardo Santini Zandoná
@since 15/08/2023
@version P11

@return objeto, Retorna a si mesmo
/*/
//-------------------------------------------------------------------
method getSchema() as object class MultasSimplificadoSmartViewBusinessObject
 
    self:addProperty("JANEIROMULTAS", "JANEIROMULTAS", "number", "JANEIROMULTAS", "JANEIROMULTAS")
    self:addProperty("JANEIROVALOR", "JANEIROVALOR", "number", "JANEIROVALOR", "JANEIROVALOR")
    self:addProperty("FEVEREIROMULTAS", "FEVEREIROMULTAS", "number", "FEVEREIROMULTAS", "FEVEREIROMULTAS")
    self:addProperty("FEVEREIROVALOR", "FEVEREIROVALOR", "number", "FEVEREIROVALOR", "FEVEREIROVALOR")
    self:addProperty("MARCOMULTAS", "MARCOMULTAS", "number", "MARCOMULTAS", "MARCOMULTAS")
    self:addProperty("MARCOVALOR", "MARCOVALOR", "number", "MARCOVALOR", "MARCOVALOR")
    self:addProperty("ABRILMULTAS", "ABRILMULTAS", "number", "ABRILMULTAS", "ABRILMULTAS")
    self:addProperty("ABRILVALOR", "ABRILVALOR", "number", "ABRILVALOR", "ABRILVALOR")
    self:addProperty("MAIOMULTAS", "MAIOMULTAS", "number", "MAIOMULTAS", "MAIOMULTAS")
    self:addProperty("MAIOVALOR", "MAIOVALOR", "number", "MAIOVALOR", "MAIOVALOR")
    self:addProperty("JUNHOMULTAS", "JUNHOMULTAS", "number", "JUNHOMULTAS", "JUNHOMULTAS")
    self:addProperty("JUNHOVALOR", "JUNHOVALOR", "number", "JUNHOVALOR", "JUNHOVALOR")
    self:addProperty("JULHOMULTAS", "JULHOMULTAS", "number", "JULHOMULTAS", "JULHOMULTAS")
    self:addProperty("JULHOVALOR", "JULHOVALOR", "number", "JULHOVALOR", "JULHOVALOR")
    self:addProperty("AGOSTOMULTAS", "AGOSTOMULTAS", "number", "AGOSTOMULTAS", "AGOSTOMULTAS")
    self:addProperty("AGOSTOVALOR", "AGOSTOVALOR", "number", "AGOSTOVALOR", "AGOSTOVALOR")
    self:addProperty("SETEMBROMULTAS", "SETEMBROMULTAS", "number", "SETEMBROMULTAS", "SETEMBROMULTAS")
    self:addProperty("SETEMBROVALOR", "SETEMBROVALOR", "number", "SETEMBROVALOR", "SETEMBROVALOR")
    self:addProperty("OUTUBROMULTAS", "OUTUBROMULTAS", "number", "OUTUBROMULTAS", "OUTUBROMULTAS")
    self:addProperty("OUTUBROVALOR", "OUTUBROVALOR", "number", "OUTUBROVALOR", "OUTUBROVALOR")
    self:addProperty("NOVEMBROMULTAS", "NOVEMBROMULTAS", "number", "NOVEMBROMULTAS", "NOVEMBROMULTAS")
    self:addProperty("NOVEMBROVALOR", "NOVEMBROVALOR", "number", "NOVEMBROVALOR", "NOVEMBROVALOR")
    self:addProperty("DEZEMBROMULTAS", "DEZEMBROMULTAS", "number", "DEZEMBROMULTAS", "DEZEMBROMULTAS")
    self:addProperty("DEZEMBROVALOR", "DEZEMBROVALOR", "number", "DEZEMBROVALOR", "DEZEMBROVALOR")
    self:addProperty("ANO", "ANO", "string", "ANO", "ANO")
 
return self:oSchema
