#include "msobject.ch"
#include "tlpp-core.th"
#include "tlpp-rest.th"
#include "totvs.framework.treports.integratedprovider.th"

namespace totvs.protheus.MDT.DiagnosticoMedicoSmartViewBusinessObject

//-------------------------------------------------------------------
/*/{Protheus.doc} DiagnosticoMedicoSmartViewBusinessObject
Objeto de negócio diagnóstico
Tabelas: TM0, TMT, TMK, TMR, TNC
@type Classe

@author Eloisa Anibaletto
@since 17/11/2023
@version P11
@return Nil
/*/
//-------------------------------------------------------------------
@totvsFrameworkTReportsIntegratedProvider(active=.T., team="SIGAMDT", tables="TM0, TMT, TMK, TMR, TNC", name="Diagnóstico Médico", country="ALL", initialRelease="12.1.2310")
class DiagnosticoMedicoSmartViewBusinessObject from totvs.framework.treports.integratedprovider.IntegratedProvider

    public method new() as object
    public method getAreas() as array
    public method getDescription() as character
    public method getData() as object
    public method getSchema() as object

endclass

//-------------------------------------------------------------------
/*/{Protheus.doc} New
Método Construtor do Objeto de Negócio
@type Método

@author Eloisa Anibaletto
@since 17/11/2023
@version P11
@return Nil
/*/
//-------------------------------------------------------------------
method new() as object class DiagnosticoMedicoSmartViewBusinessObject
    _Super:new()
    self:setDisplayName( "Diagnóstico Médico" )
return self

//-------------------------------------------------------------------
/*/{Protheus.doc} getDescription
Descrição do Objeto de Negócio
@type Método

@author Eloisa Anibaletto
@since 17/11/2023
@version P11
@return caractere, Conteúdo da descrição do Objeto de Negócios
/*/
//-------------------------------------------------------------------
method getDescription() as character class DiagnosticoMedicoSmartViewBusinessObject
return "Relatório dos Diagnósticos Médicos"

//-------------------------------------------------------------------
/*/{Protheus.doc} getAreas
Áreas do menu que o Objeto de Negócio deve ficar
@type Método

@author Eloisa Anibaletto
@since 17/11/2023
@version P11
@return array, Retorna um array contendo as sessões do Menu em que o Objeto de Negócio deve aparecer
/*/
//-------------------------------------------------------------------
method getAreas() as array class DiagnosticoMedicoSmartViewBusinessObject
return { "MDT" }

//-------------------------------------------------------------------
/*/{Protheus.doc} GetData
Método responsável pelo processamento dos dados enviados pelo 
Objeto de Negócio
@type Método

@author Eloisa Anibaletto
@since 17/11/2023
@version P11

@param nPage, numerico, Número da página atual
@param oFilter, objeto, Filtros aplicados pelo usuário

@return objeto, Retorna o próprio objeto
/*/
//-------------------------------------------------------------------
method getData( nPage as numeric, oFilter as object ) as object class DiagnosticoMedicoSmartViewBusinessObject
    
    Local cAliasTMT   as character
    Local cMat        as character
    Local cNomeSocial as character
    Local cTM0        as character
    Local cTMK        as character
    Local cTMR        as character
    Local cTMT        as character
    Local cTNC        as character

    Local jParams     as json

    Local nCount      as numeric

    nCount  := 0
    jParams := oFilter:getParameters() // metodo para retorno do json dos parâmetros

    cAliasTMT  := GetNextAlias()
    cTM0       := xFilial( "TM0" )
	cTMK       := xFilial( "TMK" )
    cTMR       := xFilial( "TMR" )
	cTMT       := xFilial( "TMT" )
	cTNC       := xFilial( "TNC" )

    BeginSQL Alias cAliasTMT
		SELECT TM0.TM0_FILFUN, TM0.TM0_NUMFIC, TM0.TM0_MAT, TM0.TM0_NOMFIC, TM0.TM0_NOMSOC, TM0.TM0_CODFUN,
            TMT.TMT_DTCONS, TMT.TMT_HRCONS, TMT.TMT_DTATEN, TMT.TMT_HRATEN, TMT.TMT_QTAFAS, TMT.TMT_TEMPER,
            TMT.TMT_ALTURA, TMT_CODUSA, TMT.TMT_PESO, TMT.TMT_MASSA, TMT.TMT_CC, TMT.TMT_AVODSE, TMT.TMT_OCORRE,
            TMT.TMT_AVOESE, TMT.TMT_TIPDEF, TMT.TMT_CIDDEF, TMT.TMT_PULSO, TMT.TMT_RESPI, TMT.TMT_DINAMO,
            TMT.TMT_PRESIS, TMT.TMT_PREDIS, TMT.TMT_HRRETO,TMK.TMK_CODUSU, TMK.TMK_NOMUSU, TMK.TMK_NUMENT,
            TMR.TMR_CID, TMR.TMR_DOENCA, TNC.TNC_ACIDEN, TNC.TNC_DESACI,
            ISNULL( CAST( CAST( TMT.TMT_MHISPR AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MHISPR,
            ISNULL( CAST( CAST( TMT.TMT_MDIAGN AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MDIAGN,
            ISNULL( CAST( CAST( TMT.TMT_MDESAT AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MDESAT,
            ISNULL( CAST( CAST( TMT.TMT_MQUEIX AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MQUEIX,
            ISNULL( CAST( CAST( TMT.TMT_MHDA   AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MHDA,
            ISNULL( CAST( CAST( TMT.TMT_MCABEC AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MCABEC,
            ISNULL( CAST( CAST( TMT.TMT_MOLHOS AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MOLHOS,
            ISNULL( CAST( CAST( TMT.TMT_MOUVID AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MOUVID,
            ISNULL( CAST( CAST( TMT.TMT_MPESCO AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MPESCO,
            ISNULL( CAST( CAST( TMT.TMT_MAPRES AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MAPRES,
            ISNULL( CAST( CAST( TMT.TMT_MAPDIG AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MAPDIG,
            ISNULL( CAST( CAST( TMT.TMT_MAPCIR AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MAPCIR,
            ISNULL( CAST( CAST( TMT.TMT_MAPURI AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MAPURI,
            ISNULL( CAST( CAST( TMT.TMT_MMIS   AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MMIS,
            ISNULL( CAST( CAST( TMT.TMT_MPELE  AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MPELE,
            ISNULL( CAST( CAST( TMT.TMT_MEXAME AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MEXAME,
            ISNULL( CAST( CAST( TMT.TMT_MOROFA AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MOROFA,
            ISNULL( CAST( CAST( TMT.TMT_MOTOSC AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MOTOSC,
            ISNULL( CAST( CAST( TMT.TMT_MABDOM AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MABDOM,
            ISNULL( CAST( CAST( TMT.TMT_MAUSCA AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MAUSCA,
            ISNULL( CAST( CAST( TMT.TMT_MAUSPU AS VARBINARY( 8000 ) ) AS VARCHAR( 8000 ) ), "" ) AS TMT_MAUSPU
		FROM %table:TMT% TMT
		LEFT JOIN %table:TM0% TM0 ON
				TM0.TM0_NUMFIC = TMT.TMT_NUMFIC
				AND %exp:cTM0% = TM0.TM0_FILIAL 
				AND TM0.%notDel%
		LEFT JOIN %table:TMK% TMK ON
				TMK.TMK_CODUSU = TMT.TMT_CODUSU
				AND %exp:cTMK% = TMK.TMK_FILIAL
				AND TMK.%notDel%
		LEFT JOIN %table:TMR% TMR ON
				TMR.TMR_CID = TMT.TMT_CID
				AND %exp:cTMR% = TMR.TMR_FILIAL
				AND TMR.%notDel%
		LEFT JOIN %table:TNC% TNC ON
				TNC.TNC_ACIDEN = TMT.TMT_ACIDEN
				AND %exp:cTNC% = TNC.TNC_FILIAL
				AND TNC.%notDel%
		WHERE 
			TMT.TMT_FILIAL = %exp:cTMT%
			AND TMT.TMT_DTCONS BETWEEN %exp:jParams[ "MV_PAR01", 1 ]% AND %exp:jParams[ "MV_PAR02", 1 ]%
			AND TMT.%notDel%
	EndSQL

    dbSelectArea( cAliasTMT )
	dbGoTop()

    self:setPageSize( 15 )

    // Paginação
    If nPage == 1

        ( cAliasTMT )->( dbGoTop() )

    EndIf

    While !( cAliasTMT )->( Eof() )

        If Empty( ( cAliasTMT )->TM0_MAT )
            cMat := "-"
        Else
            cMat := ( cAliasTMT )->TM0_MAT
        EndIf

        If Empty( ( cAliasTMT )->TM0_NOMSOC )
            cNomeSocial := "-"
        Else
            cNomeSocial := ( cAliasTMT )->TM0_NOMSOC
        EndIf

        self:oData:appendData( { "TM0_NUMFIC": ( cAliasTMT )->TM0_NUMFIC, ;
                "TM0_NOMFIC": ( cAliasTMT )->TM0_NOMFIC, ;
                "TM0_NOMSOC": cNomeSocial              , ;
                "TM0_FILFUN": ( cAliasTMT )->TM0_FILFUN, ;
                "TM0_CODFUN": ( cAliasTMT )->TM0_CODFUN, ;
                "TM0_MAT"   : cMat                     , ;
                "TMT_DTCONS": totvs.framework.treports.date.stringToTimeStamp( ( cAliasTMT )->TMT_DTCONS ), ;
                "TMT_HRCONS": ( cAliasTMT )->TMT_HRCONS, ;
                "TMT_DTATEN": totvs.framework.treports.date.stringToTimeStamp( ( cAliasTMT )->TMT_DTATEN ), ;
                "TMT_HRATEN": ( cAliasTMT )->TMT_HRATEN, ;
                "TMT_OCORRE": NGRETSX3BOX( "TMT_OCORRE", ( cAliasTMT )->TMT_OCORRE ), ;
                "TMT_QTAFAS": ( cAliasTMT )->TMT_QTAFAS, ;
                "TMT_TEMPER": ( cAliasTMT )->TMT_TEMPER, ;
                "TMT_ALTURA": ( cAliasTMT )->TMT_ALTURA, ;
                "TMT_PESO"  : ( cAliasTMT )->TMT_PESO  , ;
                "TMT_MASSA" : ( cAliasTMT )->TMT_MASSA , ;
                "TMT_CC"    : ( cAliasTMT )->TMT_CC    , ;
                "TMT_CODUSA": ( cAliasTMT )->TMT_CODUSA, ;
                "TMT_AVODSE": ( cAliasTMT )->TMT_AVODSE, ;
                "TMT_AVOESE": ( cAliasTMT )->TMT_AVOESE, ;
                "TMT_TIPDEF": NGRETSX3BOX( "TMT_TIPDEF", ( cAliasTMT )->TMT_TIPDEF ), ;
                "TMT_CIDDEF": ( cAliasTMT )->TMT_CIDDEF, ;
                "TMT_PULSO" : ( cAliasTMT )->TMT_PULSO , ;
                "TMT_RESPI" : ( cAliasTMT )->TMT_RESPI , ;
                "TMT_DINAMO": ( cAliasTMT )->TMT_DINAMO, ;
                "TMT_PRESIS": ( cAliasTMT )->TMT_PRESIS, ;
                "TMT_PREDIS": ( cAliasTMT )->TMT_PREDIS, ;
                "TMT_HRRETO": ( cAliasTMT )->TMT_HRRETO, ;
                "TMT_MHISPR": ( cAliasTMT )->TMT_MHISPR, ;
                "TMT_MDIAGN": ( cAliasTMT )->TMT_MDIAGN, ;
                "TMT_MDESAT": ( cAliasTMT )->TMT_MDESAT, ;
                "TMT_MQUEIX": ( cAliasTMT )->TMT_MQUEIX, ;
                "TMT_MHDA"  : ( cAliasTMT )->TMT_MHDA  , ;
                "TMT_MCABEC": ( cAliasTMT )->TMT_MCABEC, ;
                "TMT_MOLHOS": ( cAliasTMT )->TMT_MOLHOS, ;
                "TMT_MOUVID": ( cAliasTMT )->TMT_MOUVID, ;
                "TMT_MPESCO": ( cAliasTMT )->TMT_MPESCO, ;
                "TMT_MAPRES": ( cAliasTMT )->TMT_MAPRES, ;
                "TMT_MAPDIG": ( cAliasTMT )->TMT_MAPDIG, ;
                "TMT_MAPCIR": ( cAliasTMT )->TMT_MAPCIR, ;
                "TMT_MAPURI": ( cAliasTMT )->TMT_MAPURI, ;
                "TMT_MMIS"  : ( cAliasTMT )->TMT_MMIS  , ;
                "TMT_MPELE" : ( cAliasTMT )->TMT_MPELE , ;
                "TMT_MEXAME": ( cAliasTMT )->TMT_MEXAME, ;
                "TMT_MOROFA": ( cAliasTMT )->TMT_MOROFA, ;
                "TMT_MOTOSC": ( cAliasTMT )->TMT_MOTOSC, ;
                "TMT_MABDOM": ( cAliasTMT )->TMT_MABDOM, ;
                "TMT_MAUSCA": ( cAliasTMT )->TMT_MAUSCA, ;
                "TMT_MAUSPU": ( cAliasTMT )->TMT_MAUSPU, ;
                "TMK_CODUSU": ( cAliasTMT )->TMK_CODUSU, ;
                "TMK_NOMUSU": ( cAliasTMT )->TMK_NOMUSU, ;
                "TMK_NUMENT": ( cAliasTMT )->TMK_NUMENT, ;
                "TMR_CID"   : ( cAliasTMT )->TMR_CID   , ;
                "TMR_DOENCA": ( cAliasTMT )->TMR_DOENCA, ;
                "TNC_ACIDEN": ( cAliasTMT )->TNC_ACIDEN, ;
                "TNC_DESACI": ( cAliasTMT )->TNC_DESACI } )

        ( cAliasTMT )->( dbSkip() )

        nCount++

        /*If nCount == self:getPageSize()
            Exit
        EndIf*/ //Trecho comentado porque paginação não esta funcionando

    Enddo

    self:setHasNext( ( cAliasTMT )->( !Eof() ) )

    ( cAliasTMT )->( DBCloseArea() )

return self:oData

//-------------------------------------------------------------------
/*/{Protheus.doc} getSchema
Método responsável por informar as características dos campos e 
também os parâmetros quando esses não são adicionados pela SX1
@type Método

@author Eloisa Anibaletto
@since 17/11/2023
@version P11

@return objeto, Retorna a si mesmo
/*/
//-------------------------------------------------------------------
method getSchema() as object class DiagnosticoMedicoSmartViewBusinessObject

    self:AddParameter( "MV_PAR01", "De Data" , "date"   , .F. )
    self:AddParameter( "MV_PAR02", "Ate Data", "date"   , .F. )

    self:addProperty( "TM0_NUMFIC", "Número da Ficha Médica"           , "string", "Ficha Médica"             , "TM0_NUMFIC" )
    self:addProperty( "TM0_NOMFIC", "Nome Proprietário da Ficha Médica", "string", "Nome"                     , "TM0_NOMFIC" )
    self:addProperty( "TM0_NOMSOC", "Nome Social"                      , "string", "Nome Social"              , "TM0_NOMSOC" )
    self:addProperty( "TM0_FILFUN", "Filial do Funcionário"            , "string", "Filial Func."             , "TM0_FILFUN" )
    self:addProperty( "TM0_CODFUN", "Função"                           , "string", "Função"                   , "TM0_CODFUN" )
    self:addProperty( "TM0_MAT"   , "Matrícula do Funcionário"         , "string", "Matrícula"                , "TM0_MAT"    )
    self:addProperty( "TMT_DTCONS", "Data Consulta Diag."              , "date"  , "Data Consulta Diag."      , "TMT_DTCONS" )
    self:addProperty( "TMT_HRCONS", "Hora Consulta Diag."              , "string", "Hora Consulta Diag."      , "TMT_HRCONS" )
    self:addProperty( "TMT_DTATEN", "Data Atendimento Diag."           , "date"  , "Data Atendimento Diag."   , "TMT_DTATEN" )
    self:addProperty( "TMT_HRATEN", "Hora Atendimento Diag."           , "string", "Hora Atendimento Diag."   , "TMT_HRATEN" )
    self:addProperty( "TMT_OCORRE", "Indicativo de Atendimento"        , "string", "Ind. Atendim."            , "TMT_OCORRE" )
    self:addProperty( "TMT_QTAFAS", "Quantidade de dias afastado"      , "number", "Dias Afastado"            , "TMT_QTAFAS" )
    self:addProperty( "TMT_CODUSA", "Atend. Ambul."                    , "string", "Atend. Ambul."            , "TMT_CODUSA" )
    self:addProperty( "TMT_TEMPER", "Temperatura"                      , "number", "Temperatura"              , "TMT_TEMPER" )
    self:addProperty( "TMT_ALTURA", "Altura"                           , "number", "Altura"                   , "TMT_ALTURA" )
    self:addProperty( "TMT_PESO"  , "Peso"                             , "number", "Peso"                     , "TMT_PESO"   )
    self:addProperty( "TMT_MASSA" , "Massa Corporal"                   , "string", "Massa Corporal"           , "TMT_MASSA"  )
    self:addProperty( "TMT_CC"    , "Centro de Custo"                  , "string", "Centro de Custo"          , "TMT_CC"     )
    self:addProperty( "TMT_AVODSE", "Ac.V.O.D.S/C"                     , "number", "Ac.V.O.D.S/C"             , "TMT_AVODSE" )
    self:addProperty( "TMT_AVOESE", "Ac.V.O.E.S/C"                     , "number", "Ac.V.O.E.S/C"             , "TMT_AVOESE" )
    self:addProperty( "TMT_TIPDEF", "Tipo de Deficiência"              , "string", "Tipo de Deficiência"      , "TMT_TIPDEF" )
    self:addProperty( "TMT_CIDDEF", "CID da Deficiência"               , "string", "CID da Deficiência"       , "TMT_CIDDEF" )
    self:addProperty( "TMT_PULSO" , "Pulso"                            , "string", "Pulso"                    , "TMT_PULSO"  )
    self:addProperty( "TMT_RESPI" , "Respiração"                       , "string", "Respiração"               , "TMT_RESPI"  )
    self:addProperty( "TMT_DINAMO", "Dinometria"                       , "number", "Dinometria"               , "TMT_DINAMO" )
    self:addProperty( "TMT_PRESIS", "Sistólica"                        , "number", "Sistólica"                , "TMT_PRESIS" )
    self:addProperty( "TMT_PREDIS", "Diastólica"                       , "number", "Diastólica"               , "TMT_PREDIS" )
    self:addProperty( "TMT_HRRETO", "Retorno"                          , "string", "Retorno"                  , "TMT_HRRETO" )
    self:addProperty( "TMT_MHISPR", "Hist. Pregr."                     , "string", "Hist. Pregr."             , "TMT_MHISPR" )
    self:addProperty( "TMT_MDIAGN", "Diagnóstico"                      , "string", "Diagnóstico"              , "TMT_MDIAGN" )
    self:addProperty( "TMT_MDESAT", "Atendimento Médico"               , "string", "Atend. Médico"            , "TMT_MDESAT" )
    self:addProperty( "TMT_MQUEIX", "Queixa"                           , "string", "Queixa"                   , "TMT_MQUEIX" )
    self:addProperty( "TMT_MHDA"  , "Histórico de Doença"              , "string", "Histórico Doença"         , "TMT_MHDA"   )
    self:addProperty( "TMT_MCABEC", "Cabeça"                           , "string", "Cabeça"                   , "TMT_MCABEC" )
    self:addProperty( "TMT_MOLHOS", "Olhos"                            , "string", "Olhos"                    , "TMT_MOLHOS" )
    self:addProperty( "TMT_MOUVID", "Ouvidos"                          , "string", "Ouvidos"                  , "TMT_MOUVID" )
    self:addProperty( "TMT_MPESCO", "Pescoço"                          , "string", "Pescoço"                  , "TMT_MPESCO" )
    self:addProperty( "TMT_MAPRES", "Aparelho Respiratório"            , "string", "Apar. Respiratório"       , "TMT_MAPRES" )
    self:addProperty( "TMT_MAPDIG", "Aparelho Gastrointestinal"        , "string", "Apar. Gastrointestinal"   , "TMT_MAPDIG" )
    self:addProperty( "TMT_MAPCIR", "Aparelho Cardiovascular"          , "string", "Apar. Cardiovascular"     , "TMT_MAPCIR" )
    self:addProperty( "TMT_MAPURI", "Aparelho Urinário"                , "string", "Apar. Urinário"           , "TMT_MAPURI" )
    self:addProperty( "TMT_MMIS"  , "Membros"                          , "string", "Membros"                  , "TMT_MMIS"   )
    self:addProperty( "TMT_MPELE" , "Pele"                             , "string", "Pele"                     , "TMT_MPELE"  )
    self:addProperty( "TMT_MEXAME", "Exame Físico"                     , "string", "Exame Físico"             , "TMT_MEXAME" )
    self:addProperty( "TMT_MOROFA", "Orofaringe"                       , "string", "Orofaringe"               , "TMT_MOROFA" )
    self:addProperty( "TMT_MOTOSC", "Otoscopia"                        , "string", "Otoscopia"                , "TMT_MOTOSC" )
    self:addProperty( "TMT_MABDOM", "Abdomem"                          , "string", "Abdomem"                  , "TMT_MABDOM" )
    self:addProperty( "TMT_MAUSCA", "Frequência Cardíaca"              , "string", "Frequência Cardíaca"      , "TMT_MAUSCA" )
    self:addProperty( "TMT_MAUSPU", "Ausc. Pulm."                      , "string", "Ausc. Pulm."              , "TMT_MAUSPU" )
    self:addProperty( "TMK_CODUSU", "Código do Usuário"                , "string", "Cód. Usuário"             , "TMK_CODUSU" )
    self:addProperty( "TMK_NOMUSU", "Nome do Usuário"                  , "string", "Nome do Usuário"          , "TMK_NOMUSU" )
    self:addProperty( "TMK_NUMENT", "Num Ent Clas"                     , "string", "Num Ent Clas"             , "TMK_NUMENT" )
    self:addProperty( "TMR_CID"   , "Código CID"                       , "string", "Código CID"               , "TMR_CID"    )
    self:addProperty( "TMR_DOENCA", "Descrição Doença"                 , "string", "Descrição Doença"         , "TMR_DOENCA" )
    self:addProperty( "TNC_ACIDEN", "Código Acidente"                  , "string", "Código Acidente"          , "TNC_ACIDEN" )
    self:addProperty( "TNC_DESACI", "Descrição Acidente"               , "string", "Descrição Acidente"       , "TNC_DESACI" )

return self:oSchema
