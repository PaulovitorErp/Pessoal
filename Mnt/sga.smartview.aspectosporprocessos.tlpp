#include "msobject.ch"
#include "tlpp-core.th"
#include "tlpp-rest.th"
#include "totvs.framework.treports.integratedprovider.th"

namespace totvs.protheus.SGA.AspectosPorProcessosSmartViewBusinessObject

//-------------------------------------------------------------------
/*/{Protheus.doc} AspectosPorProcessosSmartViewBusinessObject
Objeto de negócio de Aspectos por Processos

@author Matheus Wilbert
@since 20/11/2023
@version P11
@param param_name, param_type, param_descr
@return Nil
/*/
//-------------------------------------------------------------------
@totvsFrameworkTReportsIntegratedProvider( active = .T., team = "SIGASGA", tables = "TAF, TAG, QAA, SHB, TA4, CTT", name = "Aspecto por Processo", country = "ALL", initialRelease = "12.1.2210" )
class AspectosPorProcessosSmartViewBusinessObject from totvs.framework.treports.integratedprovider.IntegratedProvider    

    Public Method new() as object
    Public Method getAreas() as array
    Public Method getDescription() as character
    Public Method getData() as object
    Public Method getSchema() as object

EndClass

//-------------------------------------------------------------------
/*/{Protheus.doc} New
Método Construtor do Objeto de Negócio
@type  Método

@author Matheus Wilbert
@since 20/11/2023
@version P11
@return Nil
/*/
//-------------------------------------------------------------------    
Method New() as object class AspectosPorProcessosSmartViewBusinessObject
    _Super:new()
    self:setDisplayName( "Aspectos por Processo" )
Return self

//-------------------------------------------------------------------
/*/{Protheus.doc} getDescription
Descrição do Objeto de Negócio
@type Método

@author Matheus Wilbert
@since 20/11/2023
@version P11
@return caractere, Conteúdo da descrição do Objeto de Negócios
/*/
//-------------------------------------------------------------------
Method getDescription() as character class AspectosPorProcessosSmartViewBusinessObject
Return "Relatório dos Aspectos por Processo"

//-------------------------------------------------------------------
/*/{Protheus.doc} getAreas
Áreas do menu que o Objeto de Negócio deve ficar   
@type Método

@author Matheus Wibert
@since 20/11/2023
@version P11
@return array, Retorna um array contendo as sessões do Menu em que o 
Objeto de Negócio deve aparecer
/*/
//-------------------------------------------------------------------
Method getAreas() as array class AspectosPorProcessosSmartViewBusinessObject
Return { "SGA" }

//-------------------------------------------------------------------
/*/{Protheus.doc} GetData
Método responsável pelo processamento dos dados enviados pelo 
Objeto de Negócio
@type Método

@author Matheus Wilbert
@since 20/11/2023
@version P11
@param nPage, numerico, Número da página atual
@param oFilter, objeto, Filtros aplicados pelo usuário
@return objeto, Retorna o próprio objeto
/*/
//-------------------------------------------------------------------
Method getData( nPage as numeric, oFilter as object ) as object class AspectosPorProcessosSmartViewBusinessObject

    Local cAliasTAF     as character
    Local cTAF          as character
    Local cTAG          as character
    Local cQAA          as character
    Local cSHB          as character
    Local cTA4          as character
    Local cCTT          as character

    Local jParams   as json

    Local nSkip     as numeric
    Local nCount    as numeric

    nCount  := 0
    jParams := oFilter:getParameters() // metodo para retorno do json dos parâmetros

    cAliasTAF   := GetNextAlias()
    cTAF        := xFilial( 'TAF' )
    cTAG        := xFilial( 'TAG' )
    cQAA        := xFilial( 'QAA' )
    cSHB        := xFilial( 'SHB' )
    cTA4        := xFilial( 'TA4' )
    cCTT        := xFilial( 'CTT' )

    BeginSQL Alias cAliasTAF
        SELECT TAF.TAF_CODNIV, TAF.TAF_NOMNIV, TAF.TAF_NIVSUP, TAF.TAF_CCUSTO, TAF.TAF_CENTRA, TAF.TAF_MAT,
            TAG.TAG_CODNIV, TAG.TAG_CODASP, TAG.TAG_CODEST, QAA.QAA_NOME, SHB.HB_NOME,
            TA4.TA4_DESCRI, CTT.CTT_DESC01
        FROM %table:TAF% TAF
        LEFT JOIN %table:TAG% TAG ON
                TAG.TAG_FILIAL = %exp:cTAG%
                AND TAF.TAF_CODEST = TAG.TAG_CODEST
                AND TAG.%notDel%
        LEFT JOIN %table:QAA% QAA ON
                QAA.QAA_FILIAL = %exp:cQAA%
                AND TAF.TAF_MAT = QAA.QAA_MAT
                AND QAA.%notDel%
        LEFT JOIN %table:SHB% SHB ON
                SHB.HB_FILIAL = %exp:cSHB%
                AND TAF.TAF_CENTRA = SHB.HB_COD
                AND SHB.%notDel%
        LEFT JOIN %table:TA4% TA4 ON
                TA4.TA4_FILIAL = %exp:cTA4%
                AND TA4.TA4_CODASP = TAG.TAG_CODASP
                AND TA4.%notDel%
        LEFT JOIN %table:CTT% CTT ON
                CTT.CTT_FILIAL = %exp:cCTT%
                AND CTT.CTT_CUSTO = TAF.TAF_CCUSTO
                AND CTT.%notDel%
        WHERE
            TAF.TAF_FILIAL = %exp:cTAF%
            AND TAG.TAG_CODNIV BETWEEN %exp:jParams[ "MV_PAR01", 1 ]% AND %exp:jParams[ "MV_PAR02", 1 ]%
            AND TAG.TAG_CODASP BETWEEN %exp:jParams[ "MV_PAR03", 1 ]% AND %exp:jParams[ "MV_PAR04", 1 ]%
            AND TAF.%notDel%
    EndSQL

    dbSelectArea( cAliasTAF )
    dbGoTop()

    self:setPageSize( 15 )

    // Paginação

    If nPage == 1

        ( cAliasTAF )->( dbGoTop() )

    EndIf

    While !( cAliasTAF )->( Eof() )
        self:oData:appendData( { "TAF_NOMNIV": ( cAliasTAF )->TAF_NOMNIV, ;
                "TAF_NIVSUP": ( cAliasTAF )->TAF_NIVSUP , ;
                "TAF_CCUSTO": ( cAliasTAF )->TAF_CCUSTO , ;
                "TAF_CENTRA": ( cAliasTAF )->TAF_CENTRA , ;
                "TAF_MAT"   : ( cAliasTAF )->TAF_MAT    , ;
                "TAG_CODNIV": ( cAliasTAF )->TAG_CODNIV , ;
                "TAG_CODASP": ( cAliasTAF )->TAG_CODASP , ;
                "TAG_CODEST": ( cAliasTAF )->TAG_CODEST , ;
                "HB_NOME"   : ( cAliasTAF )->HB_NOME    , ;
                "TA4_DESCRI": ( cAliasTAF )->TA4_DESCRI , ;
                "CTT_DESC01": ( cAliasTAF )->CTT_DESC01 , ;
                "QAA_NOME"  : ( cAliasTAF )->QAA_NOME   , ;
                "TAF_CODNIV": ( cAliasTAF )->TAF_CODNIV} )
    ( cAliasTAF )->( dbSkip() )
 
    Enddo
 
    self:setHasNext( ( cAliasTAF )->( !Eof() ) )
 
    ( cAliasTAF )->( DBCloseArea() )

Return self:oData

//-------------------------------------------------------------------
/*/{Protheus.doc} getSchema
Método responsável por informar as características dos campos e 
também os parâmetros quando esses não são adicionados pela SX1
@type Método

@author Matheus Wilbert
@since 20/11/2023
@version P11

@return objeto, Retorna a si mesmo
/*/
//-------------------------------------------------------------------
Method getSchema() as object class AspectosPorProcessosSmartViewBusinessObject

    Self:AddParameter( 'MV_PAR01', 'De local?'      , 'string', .F. )
    Self:AddParameter( 'MV_PAR02', 'Até local?'     , 'string', .F. )
    Self:AddParameter( 'MV_PAR03', 'De Aspecto?'    , 'string', .F. )
    Self:AddParameter( 'MV_PAR04', 'Até Aspecto?'   , 'string', .F. )

    Self:addProperty( 'TAF_NOMNIV'  , 'Nome do nível'           , 'string', 'Nome do nível'             , 'TAF_NOMNIV'  )
    Self:addProperty( 'TAF_NIVSUP'  , 'Código do Nivel Superior', 'string', 'Código do Nivel Superior'  , 'TAF_NIVSUP'  )
    Self:addProperty( 'TAF_CCUSTO'  , 'Centro de Custo'         , 'string', 'Centro de Custo'           , 'TAF_CCUSTO'  )
    Self:addProperty( 'TAF_CENTRA'  , 'Centro de Trabalho'      , 'string', 'Centro de Trabalho'        , 'TAF_CENTRA'  )
    Self:addProperty( 'TAF_MAT'     , 'Responsavel'             , 'string', 'Responsavel'               , 'TAF_MAT'     )
    Self:addProperty( 'TAG_CODNIV'  , 'Código do Nivel'         , 'string', 'Código do Nivel'           , 'TAG_CODNIV'  )
    Self:addProperty( 'TAG_CODASP'  , 'Código do Aspecto'       , 'string', 'Código do Aspecto'         , 'TAG_CODASP'  )
    Self:addProperty( 'TAG_CODEST'  , 'Código da Estrutura'     , 'string', 'Código da Estrutura'       , 'TAG_CODEST'  )
    Self:addProperty( 'HB_NOME'     , 'Nome do Centro de Trab.' , 'string', 'Nome do Centro de Trab.'   , 'HB_NOME'     )
    Self:addProperty( 'TA4_DESCRI'  , 'Descrição do Aspecto'    , 'string', 'Descrição do Aspecto'      , 'TA4_DESCRI'  )
    Self:addProperty( 'CTT_DESC01'  , 'Centro de Custo'         , 'string', 'Centro de Custo'           , 'CTT_DESC01'  )
    Self:addProperty( 'QAA_NOME'    , 'Nome'                    , 'string', 'Nome'                      , 'QAA_NOME'    )

Return Self:oSchema
