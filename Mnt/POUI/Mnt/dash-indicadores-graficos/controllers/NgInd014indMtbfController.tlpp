#include 'tlpp-core.th'
#include 'tlpp-rest.th'

Namespace TotvsDevelopers.Demo.Controllers

Using Namespace TotvsDevelopers.Demo.Services

Class NgInd014indMtbfController From NgBaseController

    Public Method New() Constructor

    @Get("/api/v1/indMtbf")
    Public Method Get()

EndClass

Method New() Class NgInd014indMtbfController
    _Super:New()
Return

Method Get() Class NgInd014indMtbfController

    Local oJson      := JsonObject():New()
    Local cAliasQry  := GetNextAlias()
    Local cJson      := ''
    Local cDeData    := cTod('')
    Local cAteData   := cTod('')
    Local cDeBem     := ''
    Local cAteBem    := ''
    Local cDeCcusto  := ''
    Local cAteCcusto := ''
    Local cDeCentra  := ''
    Local cAteCentra := ''
    Local cConsCal   := ''
    Local cTempAntDe := ''
    Local cConsParada:= ''
    Local cConsSobOs := ''
    Local cConMinOs  := ''
    Local cFamilia   := ''
    Local nTotalInd  := 0
    Local nCount     := 1
    Local nMNTV001   := 0
    Local nMNTV002   := 0
    Local nTamBem    := FwTamSX3( 'T9_CODBEM' )[ 1 ]
    Local nTamCC     := FwTamSX3( 'T9_CCUSTO' )[ 1 ]
    Local nTamCT     := FwTamSX3( 'T9_CENTRAB' )[ 1 ]

    oJson:FromJson( oRest:GetQueryRequest()['value'] )

    // Pega os parametros recebidos do front
    cDeData   := StoD( StrTran( oJson:GetJsonObject('deData'),  '-' , '' ) )
    cAteData  := StoD( StrTran( oJson:GetJsonObject('ateData'),  '-' , '' ) )


    cDeBem  := PadR( oJson:GetJsonObject( 'deBem' ), nTamBem )

    If 'ZZZ' $ Upper( oJson:GetJsonObject( 'ateBem' ) )
      cAteBem := PadR( oJson:GetJsonObject( 'ateBem' ), nTamBem, 'Z' )
    Else
      cAteBem := PadR( oJson:GetJsonObject( 'ateBem' ), nTamBem )
    EndIf

    cDeCcusto := PadR( oJson:GetJsonObject( 'deCcusto' ), nTamCC )

    If 'ZZZ' $ Upper( oJson:GetJsonObject( 'ateCcusto' ) )
      cAteCcusto := PadR( oJson:GetJsonObject( 'ateCcusto' ), nTamCC, 'Z' )
    Else
      cAteCcusto := PadR( oJson:GetJsonObject( 'ateCcusto' ), nTamCC )
    EndIf

    cDeCentra := PadR( oJson:GetJsonObject( 'deCentra' ), nTamCT )

    If 'ZZZ' $ Upper( oJson:GetJsonObject( 'ateCentra' ) )
      cAteCentra := PadR( oJson:GetJsonObject( 'ateCentra' ), nTamCT, 'Z' )
    Else
      cAteCentra := PadR( oJson:GetJsonObject( 'ateCentra' ), nTamCT )
    EndIf

    cConsCal    := cValToChar( oJson:GetJsonObject('consideraCalBem') )
    cTempAntDe  := cValToChar( oJson:GetJsonObject('consideraTempAntDep') )
    cConsParada := cValToChar( oJson:GetJsonObject('consideraTempoDe') )
    cConsSobOs  := cValToChar( oJson:GetJsonObject('consideraSob') )
    cConMinOs   := cValToChar( oJson:GetJsonObject('consideraMinOS') )

    BeginSQL Alias cAliasQry

      SELECT ST9.T9_CODBEM,
             ST9.T9_CODFAMI
      FROM %table:ST9% ST9
      WHERE ST9.T9_FILIAL = %xFilial:ST9%
        AND ST9.T9_CCUSTO  BETWEEN %exp:cDeCcusto% AND %exp:cAteCcusto%
        AND ST9.T9_CENTRAB BETWEEN %exp:cDeCentra% AND %exp:cAteCentra%
        AND ST9.T9_CODBEM  BETWEEN %exp:cDeBem%    AND %exp:cAteBem%
        AND ST9.%NotDel%
        ORDER BY ST9.T9_CODFAMI

    EndSQL

    While (cAliasQry)->( !EoF() )

      nMNTV001  += MNTV001( cDeData, cAteData, (cAliasQry)->T9_CODBEM, (cAliasQry)->T9_CODBEM, cDeCcusto, cAteCcusto, cDeCentra, cAteCentra, cConsCal, cTempAntDe, cConsParada )
      nMNTV002  += MNTV002( cDeData, cAteData, (cAliasQry)->T9_CODBEM, (cAliasQry)->T9_CODBEM, cDeCcusto, cAteCcusto, cDeCentra, cAteCentra, cConsSobOs, cConMinOs, cConsParada )

      cFamilia := (cAliasQry)->T9_CODFAMI

      (cAliasQry)->( dbSkip() )

      If cFamilia != (cAliasQry)->T9_CODFAMI

        nTotalInd := nMNTV001 / nMNTV002

        If nCount == 1
          cJson += '{"items": [{ "codigo": " ' + cFamilia + '", "indicador": ' + cValToChar( nTotalInd ) + ', "mntv001": ' + cValToChar( nMNTV001 ) + ', "mntv002": ' + cValToChar( nMNTV002 )
        Else
          cJson += ', { "codigo": " ' + cFamilia + '", "indicador": ' + cValToChar( nTotalInd ) + ', "mntv001": ' + cValToChar( nMNTV001 ) + ', "mntv002": ' + cValToChar( nMNTV002 )
        EndIf

        cJson += '}'
        nCount++

        // zera valores dos indicadores para calcular a próxima familia
        nMNTV001 := 0
        nMNTV002 := 0

      EndIf

    End

    (cAliasQry)->( dbCloseArea() )

    If !Empty( cJson )
      cJson += ']}'
    EndIf

    oRest:SetResponse( cJson )

Return

