#include 'tlpp-core.th'
#include 'tlpp-rest.th'

Namespace TotvsDevelopers.Demo.Controllers

Using Namespace TotvsDevelopers.Demo.Services

Class workCenterController From NgBaseController
    Private Data oService

    Public Method New() Constructor

    @Get("/api/v1/workCenter")
    Public Method Get()

    @Get("/api/v1/workCenter/:id")
    Public Method Show()

EndClass

Method New() Class workCenterController
    _Super:New()
Return

Method Get() Class workCenterController

    Local jQuery := oRest:GetQueryRequest()
    Local jResult := Nil
    Local nPg     := IIf( !Empty( jQuery[ 'page' ] ), Val( jQuery[ 'page' ] ), Nil )
    Local nPgSize := IIf( !Empty( jQuery[ 'pageSize' ] ), Val( jQuery[ 'pageSize' ] ), Nil )
    Local cFilBrw := IIf( !Empty( jQuery[ 'filter' ] ), jQuery[ 'filter' ], Nil )

    Self:oService := workCenterService():New()
    jResult := Self:oService:GetPage(  nPg, nPgSize, cFilBrw )

    If jResult['success']
        oRest:SetResponse( jResult['result'] )
    EndIf

Return

Method Show() Class workCenterController

    Local jPath := oRest:GetPathParamsRequest()
    Local jResult := Nil

    Self:oService := workCenterService():New()
    jResult := Self:oService:FindById( jPath['id'] )

    If jResult['success']
        oRest:SetResponse( jResult['result']:ToJson() )
    Else
        oRest:SetFault( jResult['result']:ToJson() )
        oRest:SetStatusCode( jResult['result']['code'] )
    EndIf

Return
